from pwn import *
import base64

context.log_level = 'info'

HOST = os.environ.get('HOST', 'localhost')
PORT = 31337
r = remote(HOST, int(PORT))
# NUM_ROUNDS = 20


# r.recvline_contains(b'Give me input: ')
# r.sendline(b'WIN')
# r.recvline_contains(b'You sent: ')
# # r.sendline(b'./submitter')
# flag = r.recvline_contains(b'LiveCTF{').decode().strip()
# log.info('Flag: %s', flag)


# def read_win_send(round_number):
def read_win_send():
    # print(f"Round {round_number+1}/{len(challenges)}")
    # r.recvuntil(f"Round {round_number+1}/{NUM_ROUNDS}\n".encode())
    # r.recvuntil(f"Round {round_number+1}/{NUM_ROUNDS}\n".encode())
    r.recvuntil(b"Crackme: ")
    # read in base64 encoded elf
    elf_b64 = r.recvline().decode().strip()
    # decode base64
    elf_bytes = base64.b64decode(elf_b64)
    # write elf to file
    with open("./crackme", "wb") as f:
        f.write(elf_bytes)
    io = process(['python3', 'solve_inner.py', 'crackme'])
    password_to_submit = io.recvline(keepends=False)
    io.close()

    r.recvuntil(b"Password: ")
    r.sendline(password_to_submit)
    r.recvuntil(b"Correct!\n")
    

    


# for i in range(NUM_ROUNDS):
#     read_win_send(i)

while True:
    try:
        read_win_send()
    except EOFError:
        break

# print("all done!")
flag = r.recvline_contains(b'LiveCTF{').decode().strip()
log.info('Flag: %s', flag)